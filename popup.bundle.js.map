{
  "version": 3,
  "sources": ["../src/utils/logger.ts", "../src/popup.ts"],
  "sourcesContent": ["import { LogLevel, LogMessage } from '../types/logger';\r\n\r\nclass Logger {\r\n  private static instance: Logger;\r\n  private readonly isDevelopment: boolean;\r\n\r\n  private constructor() {\r\n    this.isDevelopment = process.env.NODE_ENV !== 'production';\r\n  }\r\n\r\n  public static getInstance(): Logger {\r\n    if (!Logger.instance) {\r\n      Logger.instance = new Logger();\r\n    }\r\n    return Logger.instance;\r\n  }\r\n\r\n  private formatMessage(level: LogLevel, message: string, data?: unknown): LogMessage {\r\n    return {\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      message,\r\n      data: data ? JSON.stringify(data) : undefined\r\n    };\r\n  }\r\n\r\n  public info(message: string, data?: unknown): void {\r\n    const logMessage = this.formatMessage('info', message, data);\r\n    if (this.isDevelopment) {\r\n      console.info(`[${logMessage.timestamp}] [INFO] ${message}`, data || '');\r\n    }\r\n  }\r\n\r\n  public warn(message: string, data?: unknown): void {\r\n    const logMessage = this.formatMessage('warn', message, data);\r\n    console.warn(`[${logMessage.timestamp}] [WARN] ${message}`, data || '');\r\n  }\r\n\r\n  public error(message: string, error?: Error | unknown): void {\r\n    const logMessage = this.formatMessage('error', message, error);\r\n    console.error(`[${logMessage.timestamp}] [ERROR] ${message}`, error || '');\r\n  }\r\n\r\n  public debug(message: string, data?: unknown): void {\r\n    if (this.isDevelopment) {\r\n      const logMessage = this.formatMessage('debug', message, data);\r\n      console.debug(`[${logMessage.timestamp}] [DEBUG] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n\r\nexport const logger = Logger.getInstance(); ", "import { firebaseApp } from './modules/firebaseConfig';\r\nimport { logger } from './utils/logger';\r\n\r\nfunction iniciarPopup(): void {\r\n  try {\r\n    logger.info('Popup iniciado');\r\n  } catch (error) {\r\n    logger.error('Erro ao iniciar popup:', error);\r\n  }\r\n}\r\n\r\niniciarPopup(); "],
  "mappings": "mBAEA,IAAMA,EAAN,MAAMC,CAAO,CAIH,aAAc,CACpB,KAAK,cAAgB,EACvB,CAEA,OAAc,aAAsB,CAClC,OAAKA,EAAO,WACVA,EAAO,SAAW,IAAIA,GAEjBA,EAAO,QAChB,CAEQ,cAAcC,EAAiBC,EAAiBC,EAA4B,CAClF,MAAO,CACL,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,MAAAF,EACA,QAAAC,EACA,KAAMC,EAAO,KAAK,UAAUA,CAAI,EAAI,MACtC,CACF,CAEO,KAAKD,EAAiBC,EAAsB,CACjD,IAAMC,EAAa,KAAK,cAAc,OAAQF,EAASC,CAAI,EACvD,KAAK,eACP,QAAQ,KAAK,IAAIC,EAAW,SAAS,YAAYF,CAAO,GAAIC,GAAQ,EAAE,CAE1E,CAEO,KAAKD,EAAiBC,EAAsB,CACjD,IAAMC,EAAa,KAAK,cAAc,OAAQF,EAASC,CAAI,EAC3D,QAAQ,KAAK,IAAIC,EAAW,SAAS,YAAYF,CAAO,GAAIC,GAAQ,EAAE,CACxE,CAEO,MAAMD,EAAiBG,EAA+B,CAC3D,IAAMD,EAAa,KAAK,cAAc,QAASF,EAASG,CAAK,EAC7D,QAAQ,MAAM,IAAID,EAAW,SAAS,aAAaF,CAAO,GAAIG,GAAS,EAAE,CAC3E,CAEO,MAAMH,EAAiBC,EAAsB,CAClD,GAAI,KAAK,cAAe,CACtB,IAAMC,EAAa,KAAK,cAAc,QAASF,EAASC,CAAI,EAC5D,QAAQ,MAAM,IAAIC,EAAW,SAAS,aAAaF,CAAO,GAAIC,GAAQ,EAAE,CAC1E,CACF,CACF,EAEaG,EAASP,EAAO,YAAY,EChDzC,SAASQ,GAAqB,CAC5B,GAAI,CACFC,EAAO,KAAK,gBAAgB,CAC9B,OAASC,EAAO,CACdD,EAAO,MAAM,yBAA0BC,CAAK,CAC9C,CACF,CAEAF,EAAa",
  "names": ["Logger", "_Logger", "level", "message", "data", "logMessage", "error", "logger", "iniciarPopup", "logger", "error"]
}
