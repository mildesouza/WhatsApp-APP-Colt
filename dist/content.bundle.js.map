{
  "version": 3,
  "sources": ["../src/content.ts"],
  "sourcesContent": ["// Informar que o script foi carregado\r\nconsole.log('[WhatsApp Or\u00E7amentos] Script de conte\u00FAdo carregado');\r\n\r\n// Declarar tipo para a extens\u00E3o do window\r\ndeclare global {\r\n  interface Window {\r\n    whatsappOrcamentosLoaded: boolean;\r\n  }\r\n}\r\n\r\n// Flag para evitar m\u00FAltiplas inje\u00E7\u00F5es\r\nif (typeof window.whatsappOrcamentosLoaded === 'undefined') {\r\n  window.whatsappOrcamentosLoaded = true;\r\n  console.log('[WhatsApp Or\u00E7amentos] Primeira inicializa\u00E7\u00E3o');\r\n} else {\r\n  console.log('[WhatsApp Or\u00E7amentos] Script j\u00E1 inicializado anteriormente');\r\n}\r\n\r\n/**\r\n * N\u00C3O MODIFICAR!\r\n * M\u00E9todo de extra\u00E7\u00E3o de contato de alta criticidade.\r\n * Qualquer altera\u00E7\u00E3o pode quebrar a compatibilidade do plugin.\r\n * S\u00F3 mantenha este c\u00F3digo exatamente como est\u00E1.\r\n */\r\nexport function extraiContato( /* ... */ ) {\r\n  // ... implementa\u00E7\u00E3o existente ...\r\n}\r\n\r\n// Fun\u00E7\u00E3o otimizada para extrair o telefone do contato ativo usando M\u00E9todo 2\r\nfunction extrairTelefone(): string | null {\r\n  console.log('[WhatsApp Or\u00E7amentos] Iniciando extra\u00E7\u00E3o de telefone...');\r\n  \r\n  // M\u00E9todo eficaz: extrair do atributo data-id\r\n  try {\r\n    // Verifica todos os elementos <div> com atributos data- que possam conter IDs de contato\r\n    const potentialDataElements = document.querySelectorAll('[data-id]');\r\n    console.log('[WhatsApp Or\u00E7amentos] Elementos com data-id encontrados:', potentialDataElements.length);\r\n    \r\n    for (const el of potentialDataElements) {\r\n      const dataId = el.getAttribute('data-id');\r\n      console.log('[WhatsApp Or\u00E7amentos] Data-ID encontrado:', dataId);\r\n      \r\n      if (dataId && dataId.includes('@c.us')) {\r\n        // O formato t\u00EDpico \u00E9 algo como \"5511987654321@c.us\" ou \"false_5511987654321@c.us_HASH\"\r\n        const phoneMatch = dataId.match(/([0-9]+)@c\\.us/);\r\n        if (phoneMatch && phoneMatch[1]) {\r\n          const phone = phoneMatch[1];\r\n          console.log('[WhatsApp Or\u00E7amentos] \u2705 Telefone extra\u00EDdo do data-id:', phone);\r\n          return phone;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Se nenhum telefone for encontrado pelo m\u00E9todo principal, verificamos a URL\r\n    const url = window.location.href;\r\n    console.log('[WhatsApp Or\u00E7amentos] URL atual:', url);\r\n    \r\n    if (url.includes('/p/') || url.includes('web.whatsapp.com/send')) {\r\n      // Se estiver em um chat via link direto, extrair da URL\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const phone = urlParams.get('phone');\r\n      if (phone) {\r\n        console.log('[WhatsApp Or\u00E7amentos] \u2705 Telefone extra\u00EDdo da URL:', phone);\r\n        return phone;\r\n      }\r\n    }\r\n    \r\n    console.error('[WhatsApp Or\u00E7amentos] N\u00E3o foi poss\u00EDvel extrair o telefone via data-id');\r\n    return null;\r\n  } catch (error) {\r\n    console.error('[WhatsApp Or\u00E7amentos] Erro ao extrair telefone:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Fun\u00E7\u00E3o para verificar se existe um chat aberto\r\nfunction extrairTelefoneCompleto(): string | null {\r\n  console.log('[WhatsApp Or\u00E7amentos] Iniciando extra\u00E7\u00E3o completa...');\r\n  \r\n  try {\r\n    // Verifica se existe algum chat aberto\r\n    const chatContainer = document.querySelector('#main') || \r\n                         document.querySelector('.two') || \r\n                         document.querySelector('[data-testid=\"conversation-panel-wrapper\"]');\r\n    \r\n    console.log('[WhatsApp Or\u00E7amentos] Container de chat:', chatContainer ? 'Encontrado' : 'N\u00E3o encontrado');\r\n    \r\n    if (!chatContainer) {\r\n      throw new Error('Nenhum chat aberto atualmente');\r\n    }\r\n    \r\n    // Tenta extrair usando a fun\u00E7\u00E3o principal\r\n    const phone = extrairTelefone();\r\n    \r\n    if (!phone) {\r\n      throw new Error('N\u00E3o foi poss\u00EDvel extrair o telefone');\r\n    }\r\n    \r\n    return phone;\r\n  } catch (error) {\r\n    console.error('[WhatsApp Or\u00E7amentos] Erro na extra\u00E7\u00E3o completa:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Interface para a resposta da mensagem\r\ninterface ExtracaoResponse {\r\n  success: boolean;\r\n  telefone?: string;\r\n  error?: string;\r\n}\r\n\r\n// Listener para receber mensagens do popup ou background script\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse: (response: ExtracaoResponse) => void) => {\r\n  console.log('[WhatsApp Or\u00E7amentos] Mensagem recebida:', request);\r\n  \r\n  if (request.action === 'extrairTelefone') {\r\n    console.log('[WhatsApp Or\u00E7amentos] Iniciando processo de extra\u00E7\u00E3o...');\r\n    \r\n    try {\r\n      // Extrai o telefone\r\n      const telefone = extrairTelefoneCompleto();\r\n      \r\n      if (telefone) {\r\n        console.log('[WhatsApp Or\u00E7amentos] Telefone extra\u00EDdo com sucesso:', telefone);\r\n        sendResponse({ success: true, telefone: telefone });\r\n      } else {\r\n        console.error('[WhatsApp Or\u00E7amentos] Falha ao extrair telefone');\r\n        sendResponse({ success: false, error: 'Telefone n\u00E3o encontrado' });\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Erro desconhecido';\r\n      console.error('[WhatsApp Or\u00E7amentos] Erro ao extrair telefone:', errorMessage);\r\n      sendResponse({ success: false, error: errorMessage });\r\n    }\r\n    \r\n    return true; // Mant\u00E9m a conex\u00E3o aberta para resposta ass\u00EDncrona\r\n  }\r\n  \r\n  return false;\r\n});\r\n\r\n// Informa que o script foi carregado completamente\r\nconsole.log('[WhatsApp Or\u00E7amentos] Script de conte\u00FAdo inicializado completamente'); "],
  "mappings": "mBACA,QAAQ,IAAI,0DAAoD,EAU5D,OAAO,OAAO,yBAA6B,KAC7C,OAAO,yBAA2B,GAClC,QAAQ,IAAI,uDAA8C,GAE1D,QAAQ,IAAI,kEAA4D,EASnE,SAASA,GAA2B,CAE3C,CAGA,SAASC,GAAiC,CACxC,QAAQ,IAAI,kEAAyD,EAGrE,GAAI,CAEF,IAAMC,EAAwB,SAAS,iBAAiB,WAAW,EACnE,QAAQ,IAAI,8DAA4DA,EAAsB,MAAM,EAEpG,QAAWC,KAAMD,EAAuB,CACtC,IAAME,EAASD,EAAG,aAAa,SAAS,EAGxC,GAFA,QAAQ,IAAI,+CAA6CC,CAAM,EAE3DA,GAAUA,EAAO,SAAS,OAAO,EAAG,CAEtC,IAAMC,EAAaD,EAAO,MAAM,gBAAgB,EAChD,GAAIC,GAAcA,EAAW,CAAC,EAAG,CAC/B,IAAMC,EAAQD,EAAW,CAAC,EAC1B,eAAQ,IAAI,mEAAyDC,CAAK,EACnEA,CACT,CACF,CACF,CAGA,IAAMC,EAAM,OAAO,SAAS,KAG5B,GAFA,QAAQ,IAAI,sCAAoCA,CAAG,EAE/CA,EAAI,SAAS,KAAK,GAAKA,EAAI,SAAS,uBAAuB,EAAG,CAGhE,IAAMD,EADY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACpC,IAAI,OAAO,EACnC,GAAIA,EACF,eAAQ,IAAI,+DAAqDA,CAAK,EAC/DA,CAEX,CAEA,eAAQ,MAAM,gFAAuE,EAC9E,IACT,OAASE,EAAO,CACd,eAAQ,MAAM,qDAAmDA,CAAK,EAC/D,IACT,CACF,CAGA,SAASC,GAAyC,CAChD,QAAQ,IAAI,+DAAsD,EAElE,GAAI,CAEF,IAAMC,EAAgB,SAAS,cAAc,OAAO,GAC/B,SAAS,cAAc,MAAM,GAC7B,SAAS,cAAc,4CAA4C,EAIxF,GAFA,QAAQ,IAAI,8CAA4CA,EAAgB,aAAe,mBAAgB,EAEnG,CAACA,EACH,MAAM,IAAI,MAAM,+BAA+B,EAIjD,IAAMJ,EAAQL,EAAgB,EAE9B,GAAI,CAACK,EACH,MAAM,IAAI,MAAM,2CAAqC,EAGvD,OAAOA,CACT,OAASE,EAAO,CACd,eAAQ,MAAM,4DAAoDA,CAAK,EAChE,IACT,CACF,CAUA,OAAO,QAAQ,UAAU,YAAY,CAACG,EAASC,EAAQC,IAAuD,CAG5G,GAFA,QAAQ,IAAI,8CAA4CF,CAAO,EAE3DA,EAAQ,SAAW,kBAAmB,CACxC,QAAQ,IAAI,kEAAyD,EAErE,GAAI,CAEF,IAAMG,EAAWL,EAAwB,EAErCK,GACF,QAAQ,IAAI,6DAAwDA,CAAQ,EAC5ED,EAAa,CAAE,QAAS,GAAM,SAAUC,CAAS,CAAC,IAElD,QAAQ,MAAM,oDAAiD,EAC/DD,EAAa,CAAE,QAAS,GAAO,MAAO,4BAA0B,CAAC,EAErE,OAASL,EAAO,CACd,IAAMO,EAAeP,aAAiB,MAAQA,EAAM,QAAU,oBAC9D,QAAQ,MAAM,qDAAmDO,CAAY,EAC7EF,EAAa,CAAE,QAAS,GAAO,MAAOE,CAAa,CAAC,CACtD,CAEA,MAAO,EACT,CAEA,MAAO,EACT,CAAC,EAGD,QAAQ,IAAI,2EAAqE",
  "names": ["extraiContato", "extrairTelefone", "potentialDataElements", "el", "dataId", "phoneMatch", "phone", "url", "error", "extrairTelefoneCompleto", "chatContainer", "request", "sender", "sendResponse", "telefone", "errorMessage"]
}
